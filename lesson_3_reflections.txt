** When would you want to use a remote repository rather than keeping all your work local? **

I would want to use a remote repository when I'm working with other people or when I'm working in multiple computers on the same project. It would also help if I'm working in an open source project.

** Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository? **

It may be interesting to pull changes manually in case I want to try some new feature but it's still not ready, where I'm in the middle of trying some new feature of my software but it's a middle step towards a more refined goal.

** Describe the differences between forks, clones, and branches. When would you use one instead of another? **

I would use branches when I want to change a feature of my program but it's still not ready to go into the main program (which should be always running). I would use clone to copy some repository from my remote repository for example when I'm using another computer or even if I want to clone the same program in my local repository. I would use fork when I want to change someone else version of a program but I don't have permission to change it so I would fork their program and make the changes myself in my own remote copy of their remote repository.

** What is the benefit of having a copy of the last known state of the remote stored locally? **

The benefit of having a copy of the last known state of the remote stored locally is that I can work with the most updated version of the current program and also in case I want to incorporate new changes that will not cause conflict with the existing last known state of the remote.

** How would you collaborate without using Git or GitHub? What would be easier, and what would be harder? **

To collaborate without using Git or GitHub I would need to send the whole file through e-mail and there would be a lot of back and forth of e-mails with perhaps not many changes. I think there is a learning curve with Git and GitHub but it's worth it and what would be harder would be in the case of the e-mails to check the previous changes that were made.

** When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have **

I would want to make changes in a separate branch rather than directly in master when I want to add a new feature or try a new concept without necessarily changing the main program which is in the remote. The benefit of working in a a separate branch is that it allows us to try new features withoug disrupting the main program.
